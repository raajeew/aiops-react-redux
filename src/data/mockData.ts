import type { Service, Situation, Alert, OverviewStats, MetricData, Configuration } from '../types';

export const mockServices: Service[] = [
  {
    id: '1',
    name: 'User Authentication Service',
    status: 'healthy',
    health: 98,
    responseTime: 120,
    uptime: 99.9,
    lastUpdated: '2025-09-09T10:30:00Z',
    description: 'Handles user authentication and authorization',
    version: '2.1.4',
    environment: 'production',
  },
  {
    id: '2',
    name: 'Payment Gateway',
    status: 'warning',
    health: 75,
    responseTime: 350,
    uptime: 99.2,
    lastUpdated: '2025-09-09T10:28:00Z',
    description: 'Processes payment transactions',
    version: '1.8.2',
    environment: 'production',
  },
  {
    id: '3',
    name: 'Notification Service',
    status: 'critical',
    health: 45,
    responseTime: 1200,
    uptime: 95.8,
    lastUpdated: '2025-09-09T10:25:00Z',
    description: 'Sends email and push notifications',
    version: '3.0.1',
    environment: 'production',
  },
  {
    id: '4',
    name: 'Analytics Engine',
    status: 'healthy',
    health: 95,
    responseTime: 180,
    uptime: 99.7,
    lastUpdated: '2025-09-09T10:29:00Z',
    description: 'Processes user analytics and metrics',
    version: '4.2.0',
    environment: 'production',
  },
  {
    id: '5',
    name: 'File Storage Service',
    status: 'healthy',
    health: 92,
    responseTime: 95,
    uptime: 99.5,
    lastUpdated: '2025-09-09T10:31:00Z',
    description: 'Manages file uploads and storage',
    version: '2.5.1',
    environment: 'production',
  },
  {
    id: '6',
    name: 'Search API',
    status: 'warning',
    health: 78,
    responseTime: 280,
    uptime: 98.9,
    lastUpdated: '2025-09-09T10:27:00Z',
    description: 'Provides search functionality across the platform',
    version: '1.9.3',
    environment: 'production',
  },
];

export const mockSituations: Situation[] = [
  {
    id: '1',
    title: 'High Response Time in Payment Gateway',
    description: 'Payment gateway experiencing unusually high response times affecting checkout process',
    severity: 'high',
    status: 'investigating',
    created: '2025-09-09T09:15:00Z',
    updated: '2025-09-09T10:20:00Z',
    assignee: 'John Doe',
    tags: ['payment', 'performance', 'urgent'],
    affectedServices: ['2'],
  },
  {
    id: '2',
    title: 'Notification Service Failing',
    description: 'Email notifications not being sent to users, multiple reports of missing confirmation emails',
    severity: 'critical',
    status: 'open',
    created: '2025-09-09T08:45:00Z',
    updated: '2025-09-09T10:15:00Z',
    assignee: 'Jane Smith',
    tags: ['notifications', 'email', 'critical'],
    affectedServices: ['3'],
  },
  {
    id: '3',
    title: 'Intermittent Search API Timeouts',
    description: 'Search API experiencing intermittent timeouts during peak hours',
    severity: 'medium',
    status: 'investigating',
    created: '2025-09-09T07:30:00Z',
    updated: '2025-09-09T09:45:00Z',
    assignee: 'Mike Johnson',
    tags: ['search', 'timeouts', 'performance'],
    affectedServices: ['6'],
  },
  {
    id: '4',
    title: 'Database Connection Pool Exhaustion',
    description: 'Connection pool reaching maximum capacity during high traffic periods',
    severity: 'high',
    status: 'resolved',
    created: '2025-09-08T14:20:00Z',
    updated: '2025-09-08T16:30:00Z',
    assignee: 'Sarah Wilson',
    tags: ['database', 'connections', 'resolved'],
    affectedServices: ['1', '2', '4'],
  },
  {
    id: '5',
    title: 'SSL Certificate Expiration Warning',
    description: 'SSL certificate for analytics service will expire in 7 days',
    severity: 'low',
    status: 'open',
    created: '2025-09-09T06:00:00Z',
    updated: '2025-09-09T06:00:00Z',
    tags: ['ssl', 'certificate', 'maintenance'],
    affectedServices: ['4'],
  },
];

export const mockAlerts: Alert[] = [
  {
    id: '1',
    message: 'Payment Gateway response time exceeding threshold (>300ms)',
    type: 'warning',
    timestamp: '2025-09-09T10:25:00Z',
    source: 'Monitoring System',
    acknowledged: false,
  },
  {
    id: '2',
    message: 'Notification Service health critical - immediate attention required',
    type: 'error',
    timestamp: '2025-09-09T10:20:00Z',
    source: 'Health Check',
    acknowledged: false,
  },
  {
    id: '3',
    message: 'Analytics Engine deployed successfully to production',
    type: 'success',
    timestamp: '2025-09-09T09:45:00Z',
    source: 'Deployment Pipeline',
    acknowledged: true,
  },
  {
    id: '4',
    message: 'Scheduled maintenance window starting in 2 hours',
    type: 'info',
    timestamp: '2025-09-09T09:30:00Z',
    source: 'Maintenance Scheduler',
    acknowledged: false,
  },
];

export const mockOverviewStats: OverviewStats = {
  totalServices: 6,
  healthyServices: 3,
  warningServices: 2,
  criticalServices: 1,
  openSituations: 3,
  resolvedSituations: 2,
  avgResponseTime: 312,
  systemUptime: 99.2,
};

export const mockMetrics = {
  responseTime: [
    { timestamp: '2025-09-09T09:00:00Z', value: 280, label: '09:00' },
    { timestamp: '2025-09-09T09:15:00Z', value: 295, label: '09:15' },
    { timestamp: '2025-09-09T09:30:00Z', value: 310, label: '09:30' },
    { timestamp: '2025-09-09T09:45:00Z', value: 285, label: '09:45' },
    { timestamp: '2025-09-09T10:00:00Z', value: 320, label: '10:00' },
    { timestamp: '2025-09-09T10:15:00Z', value: 340, label: '10:15' },
    { timestamp: '2025-09-09T10:30:00Z', value: 312, label: '10:30' },
  ] as MetricData[],
  throughput: [
    { timestamp: '2025-09-09T09:00:00Z', value: 1250, label: '09:00' },
    { timestamp: '2025-09-09T09:15:00Z', value: 1380, label: '09:15' },
    { timestamp: '2025-09-09T09:30:00Z', value: 1420, label: '09:30' },
    { timestamp: '2025-09-09T09:45:00Z', value: 1350, label: '09:45' },
    { timestamp: '2025-09-09T10:00:00Z', value: 1480, label: '10:00' },
    { timestamp: '2025-09-09T10:15:00Z', value: 1520, label: '10:15' },
    { timestamp: '2025-09-09T10:30:00Z', value: 1460, label: '10:30' },
  ] as MetricData[],
  errorRate: [
    { timestamp: '2025-09-09T09:00:00Z', value: 0.8, label: '09:00' },
    { timestamp: '2025-09-09T09:15:00Z', value: 1.2, label: '09:15' },
    { timestamp: '2025-09-09T09:30:00Z', value: 2.1, label: '09:30' },
    { timestamp: '2025-09-09T09:45:00Z', value: 1.5, label: '09:45' },
    { timestamp: '2025-09-09T10:00:00Z', value: 2.8, label: '10:00' },
    { timestamp: '2025-09-09T10:15:00Z', value: 3.2, label: '10:15' },
    { timestamp: '2025-09-09T10:30:00Z', value: 2.4, label: '10:30' },
  ] as MetricData[],
};

export const mockConfigurations: Configuration[] = [
  {
    id: '1',
    category: 'monitoring',
    name: 'Health Check Interval',
    description: 'Frequency of health checks for all services (in seconds)',
    value: 30,
    type: 'number',
    editable: true,
  },
  {
    id: '2',
    category: 'monitoring',
    name: 'Response Time Threshold',
    description: 'Maximum acceptable response time in milliseconds',
    value: 300,
    type: 'number',
    editable: true,
  },
  {
    id: '3',
    category: 'alerting',
    name: 'Critical Alert Email',
    description: 'Email address for critical alerts',
    value: 'alerts@company.com',
    type: 'string',
    editable: true,
  },
  {
    id: '4',
    category: 'alerting',
    name: 'Enable SMS Alerts',
    description: 'Send SMS notifications for critical issues',
    value: true,
    type: 'boolean',
    editable: true,
  },
  {
    id: '5',
    category: 'alerting',
    name: 'Alert Severity Level',
    description: 'Minimum severity level for sending alerts',
    value: 'medium',
    type: 'select',
    options: ['low', 'medium', 'high', 'critical'],
    editable: true,
  },
  {
    id: '6',
    category: 'notifications',
    name: 'Slack Webhook URL',
    description: 'Webhook URL for Slack notifications',
    value: 'https://hooks.slack.com/services/...',
    type: 'string',
    editable: true,
  },
  {
    id: '7',
    category: 'notifications',
    name: 'Email Notifications',
    description: 'Enable email notifications',
    value: true,
    type: 'boolean',
    editable: true,
  },
  {
    id: '8',
    category: 'thresholds',
    name: 'CPU Usage Warning',
    description: 'CPU usage percentage to trigger warning',
    value: 75,
    type: 'number',
    editable: true,
  },
  {
    id: '9',
    category: 'thresholds',
    name: 'Memory Usage Critical',
    description: 'Memory usage percentage to trigger critical alert',
    value: 90,
    type: 'number',
    editable: true,
  },
  {
    id: '10',
    category: 'thresholds',
    name: 'Disk Space Warning',
    description: 'Disk space usage percentage to trigger warning',
    value: 80,
    type: 'number',
    editable: true,
  },
];
